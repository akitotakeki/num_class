name: "ResNet"
layer {
  name: "resnet"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 28
    mean_file: "/srv/dataset/num_mean.binaryproto"
  }
  data_param {
    source: "/srv/dataset/train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "resnet"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 28
    mean_file: "/srv/dataset/num_mean.binaryproto"
  }
  data_param {
    source: "/srv/dataset/test_lmdb"
    batch_size: 60
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn0"
  type: "BatchNorm"
  bottom: "conv0"
  top: "bn0"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu0"
  type: "ReLU"
  bottom: "bn0"
  top: "bn0"
}
layer {
  name: "conv1_1_1"
  type: "Convolution"
  bottom: "bn0"
  top: "conv1_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn1_1_1"
  type: "BatchNorm"
  bottom: "conv1_1_1"
  top: "bn1_1_1"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu1_1_1"
  type: "ReLU"
  bottom: "bn1_1_1"
  top: "bn1_1_1"
}
layer {
  name: "conv1_1_2"
  type: "Convolution"
  bottom: "bn1_1_1"
  top: "conv1_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn1_1_2"
  type: "BatchNorm"
  bottom: "conv1_1_2"
  top: "bn1_1_2"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu1_1_2"
  type: "ReLU"
  bottom: "bn1_1_2"
  top: "bn1_1_2"
}
layer {
  name: "elt_1_1"
  type: "Eltwise"
  bottom: "bn0"
  bottom: "bn1_1_2"
  top: "elt1_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "conv2_1_1"
  type: "Convolution"
  bottom: "elt1_1"
  top: "conv2_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn2_1_1"
  type: "BatchNorm"
  bottom: "conv2_1_1"
  top: "bn2_1_1"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu2_1_1"
  type: "ReLU"
  bottom: "bn2_1_1"
  top: "bn2_1_1"
}
layer {
  name: "conv2_1_2"
  type: "Convolution"
  bottom: "bn2_1_1"
  top: "conv2_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn2_1_2"
  type: "BatchNorm"
  bottom: "conv2_1_2"
  top: "bn2_1_2"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu2_1_2"
  type: "ReLU"
  bottom: "bn2_1_2"
  top: "bn2_1_2"
}
layer {
  name: "res2"
  type: "Convolution"
  bottom: "elt1_1"
  top: "res2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "res2"
  top: "bn2"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "elt_2_1"
  type: "Eltwise"
  bottom: "bn2"
  bottom: "bn2_1_2"
  top: "elt2_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "conv3_1_1"
  type: "Convolution"
  bottom: "elt2_1"
  top: "conv3_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn3_1_1"
  type: "BatchNorm"
  bottom: "conv3_1_1"
  top: "bn3_1_1"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu3_1_1"
  type: "ReLU"
  bottom: "bn3_1_1"
  top: "bn3_1_1"
}
layer {
  name: "conv3_1_2"
  type: "Convolution"
  bottom: "bn3_1_1"
  top: "conv3_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn3_1_2"
  type: "BatchNorm"
  bottom: "conv3_1_2"
  top: "bn3_1_2"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu3_1_2"
  type: "ReLU"
  bottom: "bn3_1_2"
  top: "bn3_1_2"
}
layer {
  name: "res3"
  type: "Convolution"
  bottom: "elt2_1"
  top: "res3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn3"
  type: "BatchNorm"
  bottom: "res3"
  top: "bn3"
  batch_norm_param {
    use_global_stats: false
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "bn3"
}
layer {
  name: "elt_3_1"
  type: "Eltwise"
  bottom: "bn3"
  bottom: "bn3_1_2"
  top: "elt3_1"
  eltwise_param {
    operation: SUM
  }
}

layer {
  name: "gap"
  type: "Pooling"
  bottom: "elt3_1"
  top: "gap"
  pooling_param {
    pool: AVE
    kernel_size:7
    stride: 1
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "gap"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
